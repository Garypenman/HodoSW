### Detector map, format:
## crate slot start_channel end_channel refindex
# crate slot ch_min ch_max
bb.hodotdc.detmap = 
## Start with the reference channels for the TDC
##  2     2   127  127    -1 ## First channel is reference channel (per the code)
##  2     3   127  127    -1 ## First channel is reference channel (per the code)
## Detmap for the TDCs
  2     2     0    127     0 ## 127 channels (Left  PMTs) with reference index
  2     3     0    127     1 ## 127 channels (Right PMTs) with reference index

bb.hodotdc.chanmap = 
	 0   1   2   3   4   5   6   7   8   9  10  11  12  13  14     15  
      	 16 17  18  19  20  21  22  23  24  25  26  27  28  29  30     31 
	 32 33  34  35  36  37  38  39  40  41  42  43  44  45  46     47 
	 48 49  50  51  52  53  54  55  56  57  58  59  60  61  62     63 
	 64 65  66  67  68  69  70  71  72  73  74  75  76  77  78     79 
	 80 81  82  83  84  85  86  87  88  89  -1  -1  -1  -1  -1     -1 
         -1 -1  -1  -1  -1  -1  -1  -1  -1  -1  -1  -1  -1  -1  -1     -1 
         -1  -1 -1  -1  -1  -1  -1  -1  -1  -1  -1  -1  -1  -1  -1  -1000 
	 90  91  92  93  94  95  96  97  98  99 100 101 102 103 104   105 
	106 107 108 109 110 111 112 113 114 115 116 117 118 119 120   121 
	122 123 124 125 126 127 128 129 130 131 132 133 134 135 136   137 
	138 139 140 141 142 143 144 145 146 147 148 149 150 151 152   153
	154 155 156 157 158 159 160 161 162 163 164 165 166 167 168   169
	170 171 172 173 174 175 176 177 178 179  -1  -1  -1  -1  -1    -1 
         -1  -1  -1  -1  -1  -1  -1  -1  -1  -1  -1  -1  -1  -1  -1    -1 
         -1  -1  -1  -1  -1  -1  -1  -1  -1  -1  -1  -1  -1  -1  -1 -1000


## Positions in [m] where +z is roated by bb.theta
bb.hodotdc.position = 0 0 2.5319 ## Need to re-check this number


## Size
#bb.hodotdc.size   =  0.595 2.295 0.37 # in meters
bb.hodotdc.size   =  0.600 0.025 0.025 # in meters

## Number of rows and columns
#bb.hodotdc.ncols =  2
#bb.hodotdc.nrows = 90
# swapping this from intuitve 90 rows of 2 columns
# generic detector loops row top, then column
#our tdc is all 90 left pmt in first module, all 90 in 2nd module for right 
bb.hodotdc.ncols =  90
bb.hodotdc.nrows = 2

## Position of first module
bb.hodotdc.xyz    = -1.105  0.255  0.000
## Space between modules
#bb.hodotdc.dxdydz =  10.000  10.000  0.000
#need to check this
bb.hodotdc.dxdydz =  0.010  0.010  0.000

bb.hodotdc.tdcGoodTimeCut = 4000.0 #-50.

bb.hodotdc.reftdcGoodTimeCut = 2000.0 #-50.

bb.hodotdc.tdc.offset = 0.0 #what is offset

bb.hodotdc.tdc.calib = 0.1 #35ps time res per v1190 channel or 100ps

bb.hodotdc.tdcbaroffset = 0
#this is not really relevant for tdc but include to be consistent with adc db. This allows to cycle through the bars with subsections of the readout at a time. it is optional and currently not implemented for tdc in sbstiminghodoscope.cxx

# this timewalk0 map is ordered as follows: first 90 elements are left pmt time walk parameters, 2nd 90 elements are the right pmt time walk parameters, numberring from bottom of stack to top

bb.hodotdc.timewalk0map = 
-0.498986 -0.616183 -0.346967 -0.372736 -0.620923 -0.521514 -0.538344 -0.881613
-0.819294 -0.196551 -0.813483 0.0677636 -0.269492 -0.433016 -0.49292  -0.064856
-0.422803 -0.696679 -0.507101 -0.448937	-0.395464 -0.230348 -0.375671 -0.512591
-0.282094 -0.634391 -0.635421 -0.502981	-0.431557 -0.391352 -0.409213 -0.0863818
-0.304387 -0.18831  -0.127845 -0.396434	-0.307701 4.0703    -51.9489  -0.671308	
-0.317884 -0.310661 -0.289298 -0.368327	-0.209535 -0.438122 -0.217981 -0.130034
-0.194007 -0.243304 -0.307176 -0.404828	-0.282856 -0.289616 -0.367405 -0.263768
-0.230264 -0.264981 -0.224603 -0.264127	-0.266273 -0.197092 -0.196615 -0.151506
-0.237501 -0.101294 -0.167748 -0.23088	-0.238873 -0.198241 -0.217363 -0.230592
-0.148111 -0.165592 -0.174194 -0.107455	0.427436  -0.131087 -0.115971 -0.143931
-0.222116 -0.192921 -0.209725 -0.283213	-0.284738 -0.212085 -0.207532 -0.239349
-0.231251 0.0       -0.682959 -0.84456	-0.597399 -0.458018 -0.460284 -1.08838
-0.967298 -0.897971 -0.631092 -0.46021	-0.368188 -0.737426 -0.524825 -0.758517
-0.852717 -0.56934  -0.162816 -0.736451	-0.552876 -0.599886 -0.686498 -0.688913
-0.542396 -1.02011  -0.876103 -0.771005	-0.772824 -0.810793 -0.929546 -0.896214
-0.925813 -0.901156 -0.501584 -0.781957	-1.0309	  -0.841322 -0.894817 -0.907026
-0.595633 -0.940052 -0.790837 -1.03195	-0.850275 -0.876021 -0.782173 -0.913396
-1.06144  -0.833536 -0.712525 -0.870205	-0.707269 -0.87365  -0.756357 -0.726333
-0.790963 -0.84308  -0.857652 -0.898559	-0.833067 -0.760745 -0.829854 -0.681966
-0.676025 -0.708163 -0.598289 -0.713716	-0.651151 -0.375809 -0.62491  -0.633068
-0.557125 -0.680839 -0.554682 -0.530734	-0.478638 -0.492587 -0.526671 -0.471519
-0.437053 -0.506672 -0.413104 -0.418739	-0.384006 -0.425281 -0.473242 -0.43884
-0.390731 -0.401735 -0.4397   0.0
	
bb.hodotdc.timewalk1map = 
-344.003 -279.294 -332.911 -351.853 -276.475 -342.727 -346.875 -300.061
-280.429 -402.311 -261.018 -460.859 -391.033 -400.275 -344.246 -435.279
-352.252 -238.099 -294.389 -344.855 -306.998 -361.449 -355.015 -349.506
-371.825 -287.488 -267.905 -303.148 -318.163 -363.55  -340.952 -386.106
-354.595 -323.661 -362.571 -341.814 -350.35  -1131.69 9273.53  -324.995
-334.281 -344.74  -366.918 -328.482 -358.056 -365.797 -352.751 -365.493
-370.786 -300.665 -366.35  -343.782 -343.309 -361.071 -344.581 -382.04
-356.343 -365.151 -370.039 -341.837 -383.737 -412.9   -366.486 -354.904
-389.753 -335.09  -371.817 -375.472 -376.797 -393.879 -368.881 -381.614
-384.637 -388.367 -390.6   -401.216 -543.11  -427.142 -391.552 -381.198
-445.127 -363.356 -382.525 -422.102 -395.984 -397.486 -382.056 -429.718
-411.842 0.0      -183.88  -140.11  -230.227 -254.133 -248.336 -188.332
-174.06	-194.711  -231.613 -263.658 -286.247 -177.03  -253.177 -245.564
-191.282 -228.399 -397.876 -158.435 -237.362 -226.777 -207.66  -230.227
-269.169 -192.263 -201.884 -227.797 -216.774 -209.978 -200.032 -218.363
-179.473 -181.483 -327.439 -181.374 -158.552 -230.043 -189.56  -191.137
-258.939 -216.008 -236.19  -203.579 -222.966 -208.398 -225.849 -230.975
-169.582 -193.285 -266.707 -143.734 -253.966 -231.489 -217.477 -275.485
-227.301 -241.276 -242.603 -222.77  -232.222 -244.928 -233.787 -275.063
-250.616 -235.921 -329.215 -261.921 -317.365 -376.55  -294.014 -349.575
-343.875 -341.93  -354.477 -347.033 -373.817 -367.16  -342.148 -423.695
-376.356 -348.132 -463.469 -391.369 -435.28  -463.513 -440.43  -457.896
-429.764 -479.96  -430.161 0.0	